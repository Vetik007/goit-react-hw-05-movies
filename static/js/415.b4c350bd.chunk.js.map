{"version":3,"file":"static/js/415.b4c350bd.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","servicesApi/TmdbApi.js"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\n\nconst Loader = ({ isLoading }) => {\n  return (\n    <Vortex\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"vortex-loading\"\n      wrapperClass=\"vortex-wrapper\"\n      colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n      wrapperStyle={{\n        display: 'block',\n        marginTop: '5px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      }}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: red;\n  }\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`;\n\n// ====================================\n\nexport const MovieList = styled.ul`\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  min-height: 390px;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: var(--bg);\n  box-shadow: var(--main-shadow);\n`;\n\nexport const MovieLink = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n  &:hover img {\n    filter: grayscale(0);\n  }\n\n  &:hover p {\n    color: var(--accent);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  margin-bottom: 5px;\n  filter: grayscale(0.4);\n\n  transition: all 200ms ease-in-out;\n`;\n\nexport const MovieName = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  transition: all 200ms ease-in-out;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { AiOutlineFileImage } from 'react-icons/ai';\n\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieName,\n  Box,\n} from './MoviesList.styled';\n\n// цей компонент відображає список фільмів які передаються через пропс movies\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  // Додємо перевірку, якщо масив movies невизначений або порожній, повертається null\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <>\n      <MovieList>\n        {movies.map(({ id, title, original_name, poster_path }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <Box>\n                {poster_path ? (\n                  <MovieImg src={imgBaseUrl.concat(poster_path)} alt={title} />\n                ) : (\n                  <AiOutlineFileImage size={200} />\n                )}\n                <MovieName>{title ?? original_name}</MovieName>\n              </Box>\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n      <Outlet />\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingFilm } from '../servicesApi/TmdbApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTrendingFilm()\n      .then(({ results }) => {\n        setMovies(results);\n        // console.log(results);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1>Popular movies today</h1>\n      {movies && movies.length > 0 ? (\n        <MoviesList movies={movies} />\n      ) : (\n        <p>No movies found.</p>\n      )}\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'd7fac244b345f78f55899e7714233f87';\n\n// список популярних фільмів\nexport const fetchTrendingFilm = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  // console.log(response);\n  return response.data;\n};\n\n// пошук за ключовим словом\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n\n// запит повної інформації про фільм\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(response);\n  return response.data;\n};\n\n// запит про акторський склад\nexport const fetchCastMovie = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n// запит відгуків про фільм\nexport const fetchReviewsMovie = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["isLoading","visible","height","width","ariaLabel","wrapperClass","colors","wrapperStyle","display","marginTop","marginLeft","marginRight","MovieList","styled","Link","MovieItem","MovieLink","MovieImg","MovieName","Box","movies","location","useLocation","map","id","title","original_name","poster_path","to","state","from","src","concat","alt","size","useState","setMovies","loading","setLoading","useEffect","fetchTrendingFilm","then","results","finally","length","axios","API_KEY","response","data","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchCastMovie","cast","fetchReviewsMovie"],"sourceRoot":""}