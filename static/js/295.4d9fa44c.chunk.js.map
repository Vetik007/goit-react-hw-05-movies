{"version":3,"file":"static/js/295.4d9fa44c.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/toastOptions/toastOptions.js","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies.jsx","servicesApi/TmdbApi.js"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\n\nconst Loader = ({ isLoading }) => {\n  return (\n    <Vortex\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"vortex-loading\"\n      wrapperClass=\"vortex-wrapper\"\n      colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n      wrapperStyle={{\n        display: 'block',\n        marginTop: '5px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      }}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: red;\n  }\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`;\n\n// ====================================\n\nexport const MovieList = styled.ul`\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  min-height: 390px;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: var(--bg);\n  box-shadow: var(--main-shadow);\n`;\n\nexport const MovieLink = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n  &:hover img {\n    filter: grayscale(0);\n  }\n\n  &:hover p {\n    color: var(--accent);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  margin-bottom: 5px;\n  filter: grayscale(0.4);\n\n  transition: all 200ms ease-in-out;\n`;\n\nexport const MovieName = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  transition: all 200ms ease-in-out;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { AiOutlineFileImage } from 'react-icons/ai';\n\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieName,\n  Box,\n} from './MoviesList.styled';\n\n// цей компонент відображає список фільмів які передаються через пропс movies\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  // Додємо перевірку, якщо масив movies невизначений або порожній, повертається null\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <>\n      <MovieList>\n        {movies.map(({ id, title, original_name, poster_path }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <Box>\n                {poster_path ? (\n                  <MovieImg src={imgBaseUrl.concat(poster_path)} alt={title} />\n                ) : (\n                  <AiOutlineFileImage size={200} />\n                )}\n                <MovieName>{title ?? original_name}</MovieName>\n              </Box>\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n      <Outlet />\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","export const toastOptions = {\n  position: 'top-right',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  color: black;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px 15px;\n  background: transparent;\n\n  :hover {\n    color: white;\n    box-shadow: 2px 2px 15px #8707ff inset;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin-right: 10px;\n  color: black;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px 25px;\n  background: transparent;\n  max-width: 190px;\n  :hover {\n    box-shadow: 2px 2px 15px #8707ff inset;\n  }\n`;","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { toastOptions } from '../toastOptions/toastOptions';\nimport { Form, Input, Button } from './Form.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nconst SearchForm = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n    // console.log(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query)\n      return toast.error('Please enter your search details', toastOptions);\n    searchMovies(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter for search movies\"\n          name=\"query\"\n          value={query}\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">\n          <AiOutlineSearch size=\"15\" />\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from '../servicesApi/TmdbApi';\nimport SearchForm from '../components/Form/Form';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  // console.log(searchParams);\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const moviesName = searchParams.get('query') ?? '';\n  // console.log(moviesName);\n\n  const handleOnSubmit = query => {\n    const changeParams = query !== '' ? { query } : {};\n    setSearchParams(changeParams);\n    // console.log(changeParams);\n  };\n\n  useEffect(() => {\n    if (!moviesName) return;\n\n    setLoading(true);\n    fetchSearchMovies(moviesName)\n      .then(({ results }) => {\n        setMovies(results);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [moviesName]);\n\n  return (\n    <>\n      {error && <h2>{error.message}</h2>}\n      <SearchForm searchMovies={handleOnSubmit} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'd7fac244b345f78f55899e7714233f87';\n\n// список популярних фільмів\nexport const fetchTrendingFilm = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  // console.log(response);\n  return response.data;\n};\n\n// пошук за ключовим словом\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n\n// запит повної інформації про фільм\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(response);\n  return response.data;\n};\n\n// запит про акторський склад\nexport const fetchCastMovie = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n// запит відгуків про фільм\nexport const fetchReviewsMovie = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["isLoading","visible","height","width","ariaLabel","wrapperClass","colors","wrapperStyle","display","marginTop","marginLeft","marginRight","MovieList","styled","Link","MovieItem","MovieLink","MovieImg","MovieName","Box","movies","location","useLocation","map","id","title","original_name","poster_path","to","state","from","src","concat","alt","size","toastOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Button","Form","Input","searchMovies","useState","query","setQuery","onSubmit","e","preventDefault","toast","type","placeholder","name","value","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","loading","setLoading","error","setError","moviesName","get","useEffect","fetchSearchMovies","then","results","catch","finally","message","length","MoviesList","Loader","axios","API_KEY","fetchTrendingFilm","response","data","fetchMovieDetails","movieId","fetchCastMovie","cast","fetchReviewsMovie"],"sourceRoot":""}